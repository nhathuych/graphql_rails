# frozen_string_literal: true

# generated by this command:
# rails g graphql:mutation CreateArticleMutation

# generate delete_article_mutation.rb and update_article_mutation.rb if you want

module Mutations
  class CreateArticleMutation < BaseMutation
    # TODO: define return fields
    field :article, Types::ArticleType, null: true

    # TODO: define arguments
    argument :title, String, required: true do
      description "This title field is a string type and is required for a new article to be created."
    end

    argument :body, String, required: true do
      description "This is the article's content, it's called the body and it expects a string."
    end

    argument :author, Integer, required: true do
      description "This is the ID of this article's author."
    end

    # TODO: define resolve method
    def resolve(title:, body:, author:)
      article = Article.new(title: title, body: body, author: Author.find_by_id(author))
      if article.save
        {
          article: article,
          errors: []
        }
      else
        {
          article: nil,
          errors: article.errors.full_messages
        }
      end
    end
  end
end
